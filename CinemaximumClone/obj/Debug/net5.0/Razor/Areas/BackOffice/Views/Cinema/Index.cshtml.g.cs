#pragma checksum "C:\Users\PC1411\Documents\BEMProjectes\MVC-Courses\CinemaximumCloneMVC\CinemaximumClone\Areas\BackOffice\Views\Cinema\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1d8a6296a3ee6597bc9c7b4cf4ed50cee4e058bd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_BackOffice_Views_Cinema_Index), @"mvc.1.0.view", @"/Areas/BackOffice/Views/Cinema/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\PC1411\Documents\BEMProjectes\MVC-Courses\CinemaximumCloneMVC\CinemaximumClone\Areas\BackOffice\Views\_ViewImports.cshtml"
using CinemaximumClone.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\PC1411\Documents\BEMProjectes\MVC-Courses\CinemaximumCloneMVC\CinemaximumClone\Areas\BackOffice\Views\_ViewImports.cshtml"
using CinemaximumClone.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d8a6296a3ee6597bc9c7b4cf4ed50cee4e058bd", @"/Areas/BackOffice/Views/Cinema/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"af768a11ad3c0818f733b36613fef3a207c124a3", @"/Areas/BackOffice/Views/_ViewImports.cshtml")]
    public class Areas_BackOffice_Views_Cinema_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<CinemaIndexViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("cinemaForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("cityForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-6"">
        <div class=""d-flex justify-content-between align-items-center"">
            <h3>Sinemalar</h3>
            <button class=""btn btn-cs btn-success""
                    data-bs-toggle=""modal"" data-bs-target=""#cinemaModal"">
                Yeni Sinema Ekle
            </button>
        </div>
        <ul id=""cinemaList"" class=""list-group mt-3"">
        </ul>
    </div>
    <div class=""col-6"">
        <div class=""d-flex justify-content-between align-items-center"">
            <h3>Şehirler</h3>
            <button class=""btn btn-sm btn-success"" 
                    data-bs-toggle=""modal"" data-bs-target=""#cityModal"">Yeni Şehir Ekle</button>
        </div>
        <ul id=""cityList"" class=""list-group mt-3"">
        </ul>
    </div>
</div>

<!-- Cinema Modal -->
<div class=""modal fade"" id=""cinemaModal"" tabindex=""-1""
     aria-labelledby=""cinemaModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">");
            WriteLiteral(@"
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""cinemaModal"">Sinema Ekle</h5>
                <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d8a6296a3ee6597bc9c7b4cf4ed50cee4e058bd5732", async() => {
                WriteLiteral(@"
                    <div class=""mb-3"">
                        <label for=""name"" class=""form-label"">Sinema Adı</label>
                        <input id=""name"" type=""text""
                               class=""form-control"" name=""Name"">
                    </div>
                    <div class=""mb-3"">
                        <label for=""name"" class=""form-label"">Açıklama</label>
                        <textarea id=""name"" class=""form-control"" name=""Desciption""></textarea>
                    </div>
                    <div class=""mb-3"">
                        <label class=""form-label"">Şehir</label>
                        <select class=""form-control"" name=""cityId"">
");
#nullable restore
#line 49 "C:\Users\PC1411\Documents\BEMProjectes\MVC-Courses\CinemaximumCloneMVC\CinemaximumClone\Areas\BackOffice\Views\Cinema\Index.cshtml"
                             foreach (var city in Model.Cities)
                            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d8a6296a3ee6597bc9c7b4cf4ed50cee4e058bd7084", async() => {
#nullable restore
#line 51 "C:\Users\PC1411\Documents\BEMProjectes\MVC-Courses\CinemaximumCloneMVC\CinemaximumClone\Areas\BackOffice\Views\Cinema\Index.cshtml"
                                                    Write(city.Name);

#line default
#line hidden
#nullable disable
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
#nullable restore
#line 51 "C:\Users\PC1411\Documents\BEMProjectes\MVC-Courses\CinemaximumCloneMVC\CinemaximumClone\Areas\BackOffice\Views\Cinema\Index.cshtml"
                                   WriteLiteral(city.Id);

#line default
#line hidden
#nullable disable
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
                __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
#nullable restore
#line 52 "C:\Users\PC1411\Documents\BEMProjectes\MVC-Courses\CinemaximumCloneMVC\CinemaximumClone\Areas\BackOffice\Views\Cinema\Index.cshtml"
                            }

#line default
#line hidden
#nullable disable
                WriteLiteral("                        </select>\r\n                    </div>\r\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-bs-dismiss=""modal"">Kapat</button>
                <button type=""button"" class=""btn btn-primary"" onclick=""saveCinema()"">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<!-- City Modal -->
<div class=""modal fade"" id=""cityModal"" tabindex=""-1""
     aria-labelledby=""cityModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""cityModal"">Şehir Ekle</h5>
                <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close""></button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d8a6296a3ee6597bc9c7b4cf4ed50cee4e058bd11348", async() => {
                WriteLiteral(@"
                    <div class=""mb-3"">
                        <label for=""name"" class=""form-label"">Şehir Adı</label>
                        <input id=""name"" type=""text""
                               class=""form-control"" name=""Name"">
                    </div>
                    <div class=""mb-3"">
                        <label for=""name"" class=""form-label"">Şehir Kodu</label>
                        <input id=""name"" type=""number""
                               class=""form-control"" name=""Code"">
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-bs-dismiss=""modal"">Kapat</button>
                <button type=""button"" class=""btn btn-primary"" onclick=""saveCity()"">Kaydet</button>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        const getCinemas = async () => {
            await fetch('/backoffice/cinema/GetCinemas').then(res => {
                return res.json();
            }).then(cinemas => {
                let listHTML = ``;
                cinemas.forEach(cinema => {
                    listHTML += `<li class=""list-group-item d-flex justify-content-between"">
                                                ${cinema.name}
                                                <button class=""btn btn-danger"" onclick=""deleteCinema(this)""
                                                        data-id=""${cinema.id}"">Sil</button>
                                            </li>`;
                });
                console.log(listHTML);
                const cinemaListEl = document.querySelector(""#cinemaList"");
                cinemaListEl.innerHTML = listHTML;
            });
        };

        const getCities = async () => {
            await fetch('/backoffice/cinema/GetCities').then(res => ");
                WriteLiteral(@"{
                return res.json();
            }).then(cities => {
                let listHTML = ``;
                cities.forEach(city => {
                    listHTML += `<li class=""list-group-item d-flex justify-content-between"">
                                                ${city.name}
                                                <button class=""btn btn-danger"" onclick=""deleteCity(this)""
                                                        data-id=""${city.id}"">Sil</button>
                                            </li>`;
                });
                console.log(listHTML);
                const cityListEl = document.querySelector(""#cityList"");
                cityListEl.innerHTML = listHTML;
            });
        };

        const deleteCinema = async (cinemaEl) => {
            try {
                await fetch('/backoffice/cinema/DeleteCinema/' + cinemaEl.dataset.id, {
                    method: 'DELETE',
                })
                    .then(res => ");
                WriteLiteral(@"{ return res.json() })
                    .then(isDeleted => {
                        if (isDeleted) window.alert(""Tebrikler kayıt başarılı bi şekile silindi."");
                        else window.alert(""Kayıt silinirken beklenmedik bir hata oluştu , lütfen sisteem yönetisine başvurun."");
                    });
            } catch (ex) {
                console.error(ex);
            } finally {
                cinemaEl.parentNode.remove();
            }
        };

        const deleteCity = async (cityEl) => {
            try {
                await fetch('/backoffice/cinema/deletecity/' + cityEl.dataset.id, {
                    method: 'DELETE',
                })
                    .then(res => { return res.json() })
                    .then(isDeleted => {
                        if (isDeleted) window.alert(""Tebrikler kayıt başarılı bi şekile silindi."");
                        else window.alert(""Kayıt silinirken beklenmedik bir hata oluştu , lütfen sisteem yönetisine başvurun.""");
                WriteLiteral(@");
                    });
            } catch (ex) {
                console.error(ex);
            } finally {
                cityEl.parentNode.remove();
            }
        };

        // dışardan gönderilen form elamanını json'a çevirir
        const convertFormDataToJson = (formEl) => {
            const formData = new FormData(formEl);
            const formJSON = Object.fromEntries(formData);
            return formJSON;
        };

        const saveCinema = async () => {
            const cinemaFormEl = document.querySelector(""#cinemaForm"");
            const cinemaFormJSON = convertFormDataToJson(cinemaFormEl);
            try {
                await fetch('/backoffice/cinema/savecinema', {
                    method: 'POST',
                    body: JSON.stringify(cinemaFormJSON),
                    headers: {
                        'Accept': 'application/json',
                        ""Content-type"": ""application/json""
                    },
                });
  ");
                WriteLiteral(@"          } catch (ex) {
                console.error(ex);
            } finally {
                cinemaFormEl.reset();
                document.querySelector("".btn-close"").click();
                getCinemas();
            }
        };

        const saveCity = async () => {
            const cityFormEl = document.querySelector(""#cityForm"");
            const cityFormJSON = convertFormDataToJson(cityFormEl);
            try {
                await fetch('/backoffice/cinema/savecity', {
                    method: 'POST',
                    body: JSON.stringify(cityFormJSON),
                    headers: {
                        'Accept': 'application/json',
                        ""Content-type"": ""application/json""
                    },
                });
            } catch (ex) {
                console.error(ex);
            } finally {
                cityFormEl.reset();
                document.querySelector("".btn-close"").click();
                getCities();
           ");
                WriteLiteral(" }\r\n        }\r\n\r\n        getCinemas();\r\n        getCities();\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CinemaIndexViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
