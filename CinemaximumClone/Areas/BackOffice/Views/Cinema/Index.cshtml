@model List<CinemasTableViewModel>

<div class="row">
    <div class="d-flex justify-content-between align-items-center">
        <h3>Sinemalar</h3>
        <div class="mb-3">
            <label class="form-label">Film Kategorisi</label>
            <select id="filteredCities" class="form-control" 
                    name="cityIds" multiple="multiple" onchange="filteredCinemas(this)">
                @foreach (var city in ViewBag.Cities)
                {
                    <option value="@city.Code">@city.Name</option>
                }
            </select>
        </div>
        <button class="btn btn-cs btn-success"
                data-bs-toggle="modal" data-bs-target="#cinemaModal">
            Yeni Sinema Ekle
        </button>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Sinema Adı</th>
                <th scope="col">Şehir</th>
                <th scope="col">Salon Sayısı</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody id="cinemaList">
            @foreach (var cinema in Model)
            {
                <tr>
                    <th scope="row">@cinema.Id</th>
                    <td>@cinema.Name</td>
                    <td>@cinema.CityName</td>
                    <td>@cinema.HallCount</td>
                    <td>
                        <a asp-action="detail" asp-route-id="@cinema.Id" class="btn btn-info">
                            <span data-feather="info"></span>
                        </a>
                        <button class="btn btn-danger" data-id="@cinema.Id" onclick="deleteCinema(this)">
                            <span data-feather="trash-2"></span>
                        </button>
                    </td>
                </tr>

            }

        </tbody>
    </table>
</div>

<!-- Cinema Modal -->
<div class="modal fade" id="cinemaModal" tabindex="-1"
     aria-labelledby="cinemaModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cinemaModal">Sinema Ekle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="cinemaForm">
                    <div class="mb-3">
                        <label for="name" class="form-label">Sinema Adı</label>
                        <input id="name" type="text"
                               class="form-control" name="Name">
                    </div>
                    <div class="mb-3">
                        <label for="name" class="form-label">Açıklama</label>
                        <textarea id="name" class="form-control" name="Description"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Şehir</label>
                        <select class="form-control" name="cityId">
                            @foreach (var city in ViewBag.Cities)
                            {
                                <option value="@city.Id">@city.Name</option>
                            }
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" onclick="saveCinema()">Kaydet</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
        const getCinemas = async () => {
            await fetch('/backoffice/cinema/GetCinemas').then(res => {
                return res.json();
            }).then(cinemas => {
                let listHTML = ``;
                cinemas.forEach(cinema => {
                    listHTML += `<tr>
                        <th scope="row">${cinema.Id}</th>
                        <td>${cinema.Name}</td>
                        <td>${cinema.CityName}</td>
                        <td>${cinema.HallCount}</td>
                        <td>
                            <button class="btn btn-info">
                                <span data-feather="edit"></span>
                            </button>
                            <button class="btn btn-danger">
                                <span data-feather="trash-2"></span>
                            </button>
                        </td>
                    </tr>`;
                });
                console.log(listHTML);
                const cinemaListEl = document.querySelector("#cinemaList");
                cinemaListEl.innerHTML = listHTML;
            });
        };

        const deleteCinema = async (cinemaEl) => {
            try {
                await fetch('/backoffice/cinema/DeleteCinema/' + cinemaEl.dataset.id, {
                    method: 'DELETE',
                })
                    .then(res => { return res.json() })
                    .then(isDeleted => {
                        if (isDeleted) window.alert("Tebrikler kayıt başarılı bi şekile silindi.");
                        else window.alert("Kayıt silinirken beklenmedik bir hata oluştu , lütfen sisteem yönetisine başvurun.");
                    });
            } catch (ex) {
                console.error(ex);
            } finally {
                cinemaEl.parentNode.remove();
            }
        };


        // dışardan gönderilen form elamanını json'a çevirir
        const convertFormDataToJson = (formEl) => {
            const formData = new FormData(formEl);
            const formJSON = Object.fromEntries(formData);
            return formJSON;
        };

        const saveCinema = async () => {
            const cinemaFormEl = document.querySelector("#cinemaForm");
            const cinemaFormJSON = convertFormDataToJson(cinemaFormEl);
            try {
                await fetch('/backoffice/cinema/savecinema', {
                    method: 'POST',
                    body: JSON.stringify(cinemaFormJSON),
                    headers: {
                        'Accept': 'application/json',
                        "Content-type": "application/json"
                    },
                });
            } catch (ex) {
                console.error(ex);
            } finally {
                cinemaFormEl.reset();
                document.querySelector(".btn-close").click();
                getCinemas();
            }
        };

        const filteredCinemas = () => {
            let selectedCities = $('#filteredCities').select2('data');
            console.log(selectedCities);
        }

        /*getCinemas();*/
    </script>


    <script>
        $(document).ready(function () {
            $('#filteredCities').select2();
        });
    </script>
}